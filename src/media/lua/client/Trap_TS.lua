---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lele.
--- DateTime: 03/08/23 12:23
---

-- https://pzwiki.net/wiki/Trapping
-- SteamLibrary/steamapps/common/ProjectZomboid/projectzomboid/media/lua/server/Traps/TrapDefinition.lua

---@class Trap

local errHandler = require("lib/ErrHandler")
local dataValidator = require("lib/DataValidator")

---@type Trap
local Trap = {}

---@type int
local trapBox
---@type int
local trapCage
---@type int
local trapCrate
---@type int
local trapMouse
---@type int
local trapSnare
---@type int
local trapStick

--- **Enum Trap**
Trap.trap = {
    ---@type string
    BOX = "Base.TrapBox",
    ---@type string
    CAGE = "Base.TrapCage",
    ---@type string
    CRATE = "Base.TrapCrate",
    ---@type string
    MOUSE = "Base.TrapMouse",
    ---@type string
    SNARE = "Base.TrapSnare",
    ---@type string
    TRAP_STICK = "Base.TrapStick"
}

--- **Set Trap Box**
---@param trapBox_ int
---@return void
function Trap.setTrapBox(trapBox_)
    if not dataValidator.isNumber(trapBox_) then
        errHandler.errMsg("Trap.setTrapBox(trapBox_)",
                " trapBox_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif trapBox_ < 0 then
        errHandler.errMsg("Trap.setTrapBox(trapBox_)",
                " trapBox_ < 0" )
        return nil
    end

    trapBox = trapBox_
end

--- **Get Trap Box**
---@return int trapBox
function Trap.getTrapBox()
    return trapBox
end

--- **Set Trap Cage**
---@param trapCage_ int
---@return void
function Trap.setTrapCage(trapCage_)
    if not dataValidator.isNumber(trapCage_) then
        errHandler.errMsg("Trap.setTrapCage(trapCage_)",
                " trapCage_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif trapCage_ < 0 then
        errHandler.errMsg("Trap.setTrapCage(trapCage_)",
                " trapCage_ < 0" )
        return nil
    end

    trapCage = trapCage_
end

--- **Get Trap Cage**
---@return int trapCage
function Trap.getTrapCage()
    return trapCage
end

--- **Set Trap Crate**
---@param trapCrate_ int
---@return void
function Trap.setTrapCrate(trapCrate_)
    if not dataValidator.isNumber(trapCrate_) then
        errHandler.errMsg("Trap.setTrapCrate(trapCrate_)",
                " trapCrate_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif trapCrate_ < 0 then
        errHandler.errMsg("Trap.setTrapCrate(trapCrate_)",
                " trapCrate_ < 0" )
        return nil
    end

    trapCrate = trapCrate_
end

--- **Get Trap Crate**
---@return int trapCrate
function Trap.getTrapCrate()
    return trapCrate
end

--- **Set Trap Mouse**
---@param trapMouse_ int
---@return void
function Trap.setTrapMouse(trapMouse_)
    if not dataValidator.isNumber(trapMouse_) then
        errHandler.errMsg("Trap.setTrapMouse(trapMouse_)",
                " trapMouse_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif trapMouse_ < 0 then
        errHandler.errMsg("Trap.setTrapMouse(trapMouse_)",
                " trapMouse_ < 0" )
        return nil
    end

    trapMouse = trapMouse_
end

--- **Get Trap Mouse**
---@return int trapMouse
function Trap.getTrapMouse()
    return trapMouse
end

--- **Set Trap Snare**
---@param trapSnare_ int
---@return void
function Trap.setTrapSnare(trapSnare_)
    if not dataValidator.isNumber(trapSnare_) then
        errHandler.errMsg("Trap.setTrapSnare(trapSnare_)",
                " trapSnare_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif trapSnare_ < 0 then
        errHandler.errMsg("Trap.setTrapSnare(trapSnare_)",
                " trapSnare_ < 0" )
        return nil
    end

    trapSnare = trapSnare_
end

--- **Get Trap Snare**
---@return int trapSnare
function Trap.getTrapSnare()
    return trapSnare
end

--- **Set Trap Stick**
---@param trapStick_ int
---@return void
function Trap.setTrapStick(trapStick_)
    if not dataValidator.isNumber(trapStick_) then
        errHandler.errMsg("Trap.setTrapStick(trapStick_)",
                " trapStick_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif trapStick_ < 0 then
        errHandler.errMsg("Trap.setTrapStick(trapStick_)",
                " trapStick_ < 0" )
        return nil
    end

    trapStick = trapStick_
end

--- **Get Trap Stick**
---@return int trapStick
function Trap.getTrapStick()
    return trapStick
end

return Trap
