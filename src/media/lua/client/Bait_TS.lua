---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lele.
--- DateTime: 03/08/23 09:04
---

-- https://pzwiki.net/wiki/Trapping
-- SteamLibrary/steamapps/common/ProjectZomboid/projectzomboid/media/lua/server/Traps/TrapDefinition.lua

---@class Bait

local errHandler = require("lib/ErrHandler")
local dataValidator = require("lib/DataValidator")

local Bait = {}

---@type int
local apple
---@type int
local baconBits
---@type int
local banana
---@type int
local bread
---@type int
local breadSlices
---@type int
local bellPepper
---@type int
local cabbage
---@type int
local carrots
---@type int
local cereal
---@type int
local cheese
---@type int
local chocolate
---@type int
local cockroach
---@type int
local corn
---@type int
local cricket
---@type int
local grasshopper
---@type int
local lettuce
---@type int
local orange
---@type int
local peach
---@type int
local peanut_butter
---@type int
local peanuts
---@type int
local processed_cheese
---@type int
local popcorn
---@type int
local potato
---@type int
local tomato
---@type int
local worm


--- **Enum Bait**
Bait.bait = {
    ---@type string
    APPLE = "Base.Apple",
    ---@type string
    BACONBITS = "farming.BaconBits",
    ---@type string
    BANANA = "Base.Banana",
    ---@type string
    BREAD = "Base.Bread",
    ---@type string
    BREAD_SLICES = "Base.BreadSlices",
    ---@type string
    BELL_PEPPER = "Base.BellPepper",
    ---@type string
    CABBAGE = "farming.Cabbage",
    ---@type string
    CARROTS = "Base.Carrots",
    ---@type string
    CEREAL = "Base.Cereal",
    ---@type string
    CHEESE = "Base.Cheese",
    ---@type string
    CHOCOLATE = "Base.Chocolate",
    ---@type string
    COCKROACH = "Base.Cockroach",
    ---@type string
    CORN = "Base.Corn",
    ---@type string
    CRICKET = "Base.Cricket",
    ---@type string
    GRASSHOPPER = "Base.Grasshopper",
    ---@type string
    LETTUCE = "Base.Lettuce",
    ---@type string
    ORANGE = "Base.Orange",
    ---@type string
    PEACH = "Base.Peach",
    ---@type string
    PEANUT_BUTTER = "Base.PeanutButter",
    ---@type string
    PEANUTS = "Base.Peanuts",
    ---@type string
    PROCESSED_CHEESE = "Base.Processedcheese",
    ---@type string
    POPCORN = "Base.Popcorn",
    ---@type string
    POTATO = "farming.Potato",
    ---@type string
    TOMATO = "farming.Tomato",
    ---@type string
    WORM = "Base.Worm",
}

--- **Set Apple**
---@param apple_ int
---@return void
function Bait.setApple(apple_)
    if not dataValidator.isNumber(apple_) then
        errHandler.errMsg("Bait.setApple(apple_)",
                " apple_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif apple_ < 0 then
        errHandler.errMsg("Bait.setApple(apple_)",
                " apple_ < 0" )
        return nil
    end

    apple = apple_
end

--- **Get Apple**
---@return int apple
function Bait.getApple()
    return apple
end

--- **Set Bacon Bits**
---@param baconBits_ int
---@return void
function Bait.setBaconBits(baconBits_)
    if not dataValidator.isNumber(baconBits_) then
        errHandler.errMsg("Bait.setBaconBits(baconBits_)",
                " baconBits_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif baconBits_ < 0 then
        errHandler.errMsg("Bait.setBaconBits(baconBits_)",
                " baconBits_ < 0" )
        return nil
    end

    baconBits = baconBits_
end

--- **Get Bacon Bits**
---@return int baconBits
function Bait.getBaconBits()
    return baconBits
end

--- **Set Banana**
---@param banana_ int
---@return void
function Bait.setBanana(banana_)
    if not dataValidator.isNumber(banana_) then
        errHandler.errMsg("Bait.setBanana(banana_)",
                " banana_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif banana_ < 0 then
        errHandler.errMsg("Bait.setBanana(banana_)",
                " banana_ < 0" )
        return nil
    end

    banana = banana_
end

--- **Get Banana**
---@return int banana
function Bait.getBanana()
    return banana
end

--- **Set Bread**
---@param bread_ int
---@return void
function Bait.setBread(bread_)
    if not dataValidator.isNumber(bread_) then
        errHandler.errMsg("Bait.setBread(bread_)",
                " bread_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif bread_ < 0 then
        errHandler.errMsg("Bait.setBread(bread_)",
                " bread_ < 0" )
        return nil
    end

    bread = bread_
end

--- **Get Bread**
---@return int bread
function Bait.getBread()
    return bread
end

--- **Set Bread Slices**
---@param breadSlices_ int
---@return void
function Bait.setBreadSlices(breadSlices_)
    if not dataValidator.isNumber(breadSlices_) then
        errHandler.errMsg("Bait.setBreadSlices(breadSlices_)",
                " breadSlices_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif breadSlices_ < 0 then
        errHandler.errMsg("Bait.setBreadSlices(breadSlices_)",
                " breadSlices_ < 0" )
        return nil
    end

    breadSlices = breadSlices_
end

--- **Get Bread Slice**
---@return int bread_slices
function Bait.getBreadSlices()
    return breadSlices
end

--- **Set Bell Pepper**
---@param bellPepper_ int
---@return void
function Bait.setBellPepper(bellPepper_)
    if not dataValidator.isNumber(bellPepper_) then
        errHandler.errMsg("Bait.setBellPepper(bellPepper_)",
                " bellPepper_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif bellPepper_ < 0 then
        errHandler.errMsg("Bait.setBellPepper(bellPepper_)",
                " bellPepper_ < 0" )
        return nil
    end

    bellPepper = bellPepper_
end

--- **Get Bell Pepper**
---@return int bell_pepper
function Bait.getBellPepper()
    return bellPepper
end

--- **Set Cabbage**
---@param cabbage_ int
---@return void
function Bait.setCabbage(cabbage_)
    if not dataValidator.isNumber(cabbage_) then
        errHandler.errMsg("Bait.setCabbage(cabbage_)",
                " cabbage_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif cabbage_ < 0 then
        errHandler.errMsg("Bait.setCabbage(cabbage_)",
                " cabbage_ < 0" )
        return nil
    end

    cabbage = cabbage_
end

--- **Get Cabbage**
---@return int cabbage
function Bait.getCabbage()
    return cabbage
end

--- **Set Carrots**
---@param carrots_ int
---@return void
function Bait.setCarrots(carrots_)
    if not dataValidator.isNumber(carrots_) then
        errHandler.errMsg("Bait.setCarrots(carrots_)",
                " carrots_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif carrots_ < 0 then
        errHandler.errMsg("Bait.setCarrots(carrots_)",
                " carrots_ < 0" )
        return nil
    end

    carrots = carrots_
end

--- **Get Carrots**
---@return int carrots
function Bait.getCarrots()
    return carrots
end

--- **Set Cereal**
---@param cereal_ int
---@return void
function Bait.setCereal(cereal_)
    if not dataValidator.isNumber(cereal_) then
        errHandler.errMsg("Bait.setCereal(cereal_)",
                " cereal_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif cereal_ < 0 then
        errHandler.errMsg("Bait.setCereal(cereal_)",
                " cereal_ < 0" )
        return nil
    end

    cereal = cereal_
end

--- **Get Cereal**
---@return int cereal
function Bait.getCereal()
    return cereal
end

--- **Set Cheese**
---@param cheese_ int
---@return void
function Bait.setCheese(cheese_)
    if not dataValidator.isNumber(cheese_) then
        errHandler.errMsg("Bait.setCheese(cheese_)",
                " cheese_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif cheese_ < 0 then
        errHandler.errMsg("Bait.setCheese(cheese_)",
                " cheese_ < 0" )
        return nil
    end

    cheese = cheese_
end

--- **Get Cheese**
---@return int cheese
function Bait.getCheese()
    return cheese
end

--- **Set Chocolate**
---@param chocolate_ int
---@return void
function Bait.setChocolate(chocolate_)
    if not dataValidator.isNumber(chocolate_) then
        errHandler.errMsg("Bait.setChocolate(chocolate_)",
                " chocolate_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif chocolate_ < 0 then
        errHandler.errMsg("Bait.setChocolate(chocolate_)",
                " chocolate_ < 0" )
        return nil
    end

    chocolate = chocolate_
end

--- **Get Chocolate**
---@return int chocolate
function Bait.getChocolate()
    return chocolate
end

--- **Set Cockroach**
---@param cockroach_ int
---@return void
function Bait.setCockroach(cockroach_)
    if not dataValidator.isNumber(cockroach_) then
        errHandler.errMsg("Bait.setCockroach(cockroach_)",
                " cockroach_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif cockroach_ < 0 then
        errHandler.errMsg("Bait.setCockroach(cockroach_)",
                " cockroach_ < 0" )
        return nil
    end

    cockroach = cockroach_
end

--- **Get Cockroach**
---@return int cockroach
function Bait.getCockroach()
    return cockroach
end

--- **Set Corn**
---@param corn_ int
---@return void
function Bait.setCorn(corn_)
    if not dataValidator.isNumber(corn_) then
        errHandler.errMsg("Bait.setCorn(corn_)",
                " corn_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif corn_ < 0 then
        errHandler.errMsg("Bait.setCorn(corn_)",
                " corn_ < 0" )
        return nil
    end

    corn = corn_
end

--- **Get Corn**
---@return int corn
function Bait.getCorn()
    return corn
end

--- **Set Cricket**
---@param cricket_ int
---@return void
function Bait.setCricket(cricket_)
    if not dataValidator.isNumber(cricket_) then
        errHandler.errMsg("Bait.setCricket(cricket_)",
                " cricket_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif cricket_ < 0 then
        errHandler.errMsg("Bait.setCricket(cricket_)",
                " cricket_ < 0" )
        return nil
    end

    cricket = cricket_
end

--- **Get Cricket**
---@return int cricket
function Bait.getCricket()
    return cricket
end

--- **Set Grasshopper**
---@param grasshopper_ int
---@return void
function Bait.setGrasshopper(grasshopper_)
    if not dataValidator.isNumber(grasshopper_) then
        errHandler.errMsg("Bait.setGrasshopper(grasshopper_)",
                " grasshopper_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif grasshopper_ < 0 then
        errHandler.errMsg("Bait.setGrasshopper(grasshopper_)",
                " grasshopper_ < 0" )
        return nil
    end

    grasshopper = grasshopper_
end

--- **Get Grasshopper**
---@return int grasshopper
function Bait.getGrasshopper()
    return grasshopper
end

--- **Set Lettuce**
---@param lettuce_ int
---@return void
function Bait.setLettuce(lettuce_)
    if not dataValidator.isNumber(lettuce_) then
        errHandler.errMsg("Bait.setLettuce(lettuce_)",
                " lettuce_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif lettuce_ < 0 then
        errHandler.errMsg("Bait.setLettuce(lettuce_)",
                " lettuce_ < 0" )
        return nil
    end

    lettuce = lettuce_
end

--- **Get Lettuce**
---@return int lettuce
function Bait.getLettuce()
    return lettuce
end

--- **Set Orange**
---@param orange_ int
---@return void
function Bait.setOrange(orange_)
    if not dataValidator.isNumber(orange_) then
        errHandler.errMsg("Bait.setOrange(orange_)",
                " orange_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif orange_ < 0 then
        errHandler.errMsg("Bait.setOrange(orange_)",
                " orange_ < 0" )
        return nil
    end

    orange = orange_
end

--- **Get Orange**
---@return int orange
function Bait.getOrange()
    return orange
end

--- **Set Peach**
---@param peach_ int
---@return void
function Bait.setPeach(peach_)
    if not dataValidator.isNumber(peach_) then
        errHandler.errMsg("Bait.setPeach(peach_)",
                " peach_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif peach_ < 0 then
        errHandler.errMsg("Bait.setPeach(peach_)",
                " peach_ < 0" )
        return nil
    end

    peach = peach_
end

--- **Get Peach**
---@return int Peach
function Bait.getPeach()
    return peach
end

--- **Set Peanut Butter**
---@param peanutButter_ int
---@return void
function Bait.setPeanutButter(peanutButter_)
    if not dataValidator.isNumber(peanutButter_) then
        errHandler.errMsg("Bait.setPeanutButter(peanutButter_)",
                " peanutButter_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif peanutButter_ < 0 then
        errHandler.errMsg("Bait.setPeanutButter(peanutButter_)",
                " peanutButter_ < 0" )
        return nil
    end

    peanut_butter = peanutButter_
end

--- **Get Peanut Butter**
---@return int peanutButter
function Bait.getPeanutButter()
    return peanut_butter
end

--- **Set Peanuts**
---@param peanuts_ int
---@return void
function Bait.setPeanuts(peanuts_)
    if not dataValidator.isNumber(peanuts_) then
        errHandler.errMsg("Bait.setPeanuts(peanuts_)",
                " peanuts_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif peanuts_ < 0 then
        errHandler.errMsg("Bait.setPeanuts(peanuts_)",
                " peanuts_ < 0" )
        return nil
    end

    peanuts = peanuts_
end

--- **Get Peanuts**
---@return int peanuts
function Bait.getPeanuts()
    return peanuts
end

--- **Set Processed Cheese**
---@param processedCheese_ int
---@return void
function Bait.setProcessedCheese(processedCheese_)
    if not dataValidator.isNumber(processedCheese_) then
        errHandler.errMsg("Bait.setProcessedCheese(processedCheese_)",
                " processedCheese_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif processedCheese_ < 0 then
        errHandler.errMsg("Bait.setProcessedCheese(processedCheese_)",
                " processedCheese_ < 0" )
        return nil
    end

    processed_cheese = processedCheese_
end

--- **Get Processed Cheese**
---@return int processedCheese
function Bait.getProcessedCheese()
    return processed_cheese
end

--- **Set Popcorn**
---@param popcorn_ int
---@return void
function Bait.setPopcorn(popcorn_)
    if not dataValidator.isNumber(popcorn_) then
        errHandler.errMsg("Bait.setPopcorn(popcorn_)",
                " popcorn_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif popcorn_ < 0 then
        errHandler.errMsg("Bait.setPopcorn(popcorn_)",
                " popcorn_ < 0" )
        return nil
    end

    popcorn = popcorn_
end

--- **Get Popcorn**
---@return int popcorn
function Bait.getPopcorn()
    return popcorn
end

--- **Set Potato**
---@param potato_ int
---@return void
function Bait.setPotato(potato_)
    if not dataValidator.isNumber(potato_) then
        errHandler.errMsg("Bait.setPotato(potato_)",
                " potato_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif potato_ < 0 then
        errHandler.errMsg("Bait.setPotato(potato_)",
                " potato_ < 0" )
        return nil
    end

    potato = potato_
end

--- **Get Potato**
---@return int potato
function Bait.getPotato()
    return potato
end

--- **Set Tomato**
---@param tomato_ int
---@return void
function Bait.setTomato(tomato_)
    if not dataValidator.isNumber(tomato_) then
        errHandler.errMsg("Bait.setTomato(tomato_)",
                " tomato_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif tomato_ < 0 then
        errHandler.errMsg("Bait.setTomato(tomato_)",
                " tomato_ < 0" )
        return nil
    end

    tomato = tomato_
end

--- **Get Tomato**
---@return int tomato
function Bait.getTomato()
    return tomato
end

--- **Set Worm**
---@param worm_ int
---@return void
function Bait.setWorm(worm_)
    if not dataValidator.isNumber(worm_) then
        errHandler.errMsg("Bait.setWorm(worm_)",
                " worm_ " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    elseif worm_ < 0 then
        errHandler.errMsg("Bait.setWorm(worm_)",
                " worm_ < 0" )
        return nil
    end

    worm = worm_
end

--- **Get Worm**
---@return int worm
function Bait.getWorm()
    return worm
end

return Bait
