---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lele.
--- DateTime: 13/08/23 23:14
---

-- https://pzwiki.net/wiki/Trapping
-- SteamLibrary/steamapps/common/ProjectZomboid/projectzomboid/media/lua/server/Traps/TrapDefinition.lua

---@class Rat

local creatureFactory = require("CreatureFactory")
local dataValidator = require("lib/DataValidator")
local errHandler = require("lib/ErrHandler")

--- **This is a class**
local Rat = {}

--- **This is an animal with its properties**
-- @type table
local rat = {}

local bait = require("Bait_TS")
local trap = require("Trap_TS")
local zone = require("Zone_TS")

--- ---------------------- Start Rat Default values -------------------------------

--                  ** BAIT **
---@type int
local cheese = 60
---@type int
local chocolate = 30
---@type int
local peanutButter = 40
---@type int
local processedCheese = 55
---@type int
local tomato = 35

--                  ** ZONE **
---@type int
local deepForest = 10
---@type int
local farmLand = 50
---@type int
local forest = 10
---@type int
local townZone = 30
---@type int
local trailerPark = 40
---@type int
local vegetation = 20

--                  ** TRAP **
---@type int
local trapMouse = 25

--                  ** ANIMALS **
--- **Type of animal**
local type = "rat"

--- **After how many hour the animal will start to destroy the cage/escape**
local strength = 24

--- **Item given to the player**
---@type string
local item = "Base.DeadRat"

--- **Hour this animal will be out and when you can catch it**
---@type int
local minHour = 0

--- **Hour this animal will be out and when you can catch it**
---@type int
local maxHour = 0

--- **Min and max "size" (understand hunger reduction) of the animal**
---@type int
local minSizePrey = 5

--- **Min and max "size" (understand hunger reduction) of the animal**
---@type int
local maxSizePrey = 25

--- ---------------------- Start Set Multiplier -------------------

--- **Set Bait Multiplier**
---@param multiplierPrey int
local function setBaitMultiplier(multiplierPrey)
    if not dataValidator.isNumber(multiplierPrey) then
        errHandler.errMsg("Rat - setBaitMultiplier(multiplierPrey)",
                "multiplierPrey " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    end

    bait.setCheese(cheese * multiplierPrey)
    bait.setChocolate(chocolate * multiplierPrey)
    bait.setPeanutButter(peanutButter * multiplierPrey)
    bait.setProcessedCheese(processedCheese * multiplierPrey)
    bait.setTomato(tomato * multiplierPrey)
end

--- **Set Trap Multiplier**
---@param multiplierPrey int
local function setTrapMultiplier(multiplierPrey)
    if not dataValidator.isNumber(multiplierPrey) then
        errHandler.errMsg("Rat - setTrapMultiplier(multiplierPrey)",
                "multiplierPrey " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    end

    trap.setTrapMouse(trapMouse * multiplierPrey)
end

--- **Set Zone Multiplier**
---@param multiplierPrey int
local function setZoneMultiplier(multiplierPrey)
    if not dataValidator.isNumber(multiplierPrey) then
        errHandler.errMsg("Rat - setZoneMultiplier(multiplierPrey)",
                "multiplierPrey " .. errHandler.err.IS_NOT_NUMBER)
        return nil
    end

    zone.setDeepForest(deepForest * multiplierPrey)
    zone.setFarmLand(farmLand * multiplierPrey)
    zone.setForest(forest * multiplierPrey)
    zone.setTownZone(townZone * multiplierPrey)
    zone.setTrailerPark(trailerPark * multiplierPrey)
    zone.setVegetation(vegetation * multiplierPrey)
end

--- **Set "size" Multiplier**
--- Min and max "size" (understand hunger reduction) of the animal
---@param multiplierPreySize int
local function setMultiplierPreySize(multiplierPreySize)
    if not dataValidator.isNumber(multiplierPreySize) then
        errHandler.errMsg("Rat - setMultiplierPreySize(multiplierPreySize)",
                "multiplierPreySize " .. errHandler.err.IS_NOT_INT)
        return nil
    end

    rat.minSize = minSizePrey * multiplierPreySize;
    rat.maxSize = maxSizePrey * multiplierPreySize;
end

--- ---------------------- Start init Bait -------------------

--- **Init Bait**
local function initBait()
    creatureFactory.createBait(rat.baits, bait.bait.CHEESE, bait.getCheese())
    creatureFactory.createBait(rat.baits, bait.bait.CHOCOLATE, bait.getChocolate())
    creatureFactory.createBait(rat.baits, bait.bait.PEANUT_BUTTER, bait.getPeanutButter())
    creatureFactory.createBait(rat.baits, bait.bait.PROCESSED_CHEESE, bait.getProcessedCheese())
    creatureFactory.createBait(rat.baits, bait.bait.TOMATO, bait.getTomato())
end

--- **Init Trap**
local function initTrap()
    creatureFactory.createTrap(rat.traps, trap.trap.MOUSE, trap.getTrapMouse())
end

--- **Init Zone**
local function initZone()
    creatureFactory.createZone(rat.zone, zone.zone.DEEP_FOREST, zone.getDeepForest())
    creatureFactory.createZone(rat.zone, zone.zone.FARM_LAND, zone.getFarmLand())
    creatureFactory.createZone(rat.zone, zone.zone.FOREST, zone.getForest())
    creatureFactory.createZone(rat.zone, zone.zone.TOWN_ZONE, zone.getTownZone())
    creatureFactory.createZone(rat.zone, zone.zone.TRAILER_PARK, zone.getTrailerPark())
    creatureFactory.createZone(rat.zone, zone.zone.VEGETATION, zone.getVegetation())
end

--- **Init**
local function init()
    ---@type int
    local multiplierPrey = SandboxVars.TrappingSurvival.Rat

    ---@type int
    local multiplierPreySize = SandboxVars.TrappingSurvival.RatSize

    if not dataValidator.isNumber(multiplierPrey) then
        errHandler.errMsg("Rat - init()",
                "multiplierPrey " .. errHandler.err.IS_NOT_INT)
        return nil
    elseif not dataValidator.isNumber(multiplierPreySize) then
        errHandler.errMsg("Rat - init()",
                "multiplierPreySize " .. errHandler.err.IS_NOT_INT)
        return nil
    end

    rat = creatureFactory.creature(type, strength, item, minSizePrey, maxSizePrey, minHour, maxHour)

    --                  ** MULTIPLIER **
    setBaitMultiplier(multiplierPrey)
    setTrapMultiplier(multiplierPrey)
    setZoneMultiplier(multiplierPrey)
    setMultiplierPreySize(multiplierPreySize)

    --                  ** Init bait/trap/zone **
    initBait()
    initTrap()
    initZone()

end

---**Get Rat**
---@return table Rat
function Rat.getRat()
    init()
    return rat
end

return Rat